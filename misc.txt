rails g scaffold Course title:string description:text
rails g scaffold Unit title:string description:text course:references
rails g scaffold Lesson title:string content:text video_html:text unit:references
rails g scaffold Post title:string content:text video_html:text

rails g scaffold Conversation status:string uuid:string
rails g model ConversationParticipant status:string conversation:references messageable_id:integer messageable_type:string
rails g model Message body:text status:string conversation:references messageable_id:integer messageable_type:string

Steps for Messaging:
1) Send first message via client, create conversation, then create message, broadcast message
2) Create admin screen for viewing participating in conversations



Lesson Steps for Site Chat Feature
- Create simple chat UI (micro Vue app)
- Nail down models: Conversation and Message models
- Create conversation and messages via API (no channel streams yet)
- Setup Connection
- Set up ConversationChannel
- Broadcast messages on create
- Update micro Vue app to support receiving messages



Steps for Stripe Implementation

1) Add stripe gem
2) Create plans in stripe
3) Update ENV vars for stripe in .env for local testing and on Production server for production
4) create pricing page
5) generate CC model and add fields to User model
6) create CC form page for every pricing option
7) Implement plans controller
8) Implement CC controller
9) Implement CC service (most logic here)
10) Update routes
11) Test test test

Steps for Sending Email

1) Generate mailer
2) Add welcome_email method
3) Update HTML message
4) Delete message after user created


RECAPTCHA_SITE_KEY=
RECAPTCHA_SECRET_KEY=
GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=
GTM_ACCOUNT_ID=
DEFAULT_EMAIL=
SENDGRID_USERNAME=
SENDGRID_PASSWORD=

STRIPE_PRO_PLAN=
STRIPE_SECRET_KEY=
STRIPE_PUBLIC_KEY=

Steps for Adding Typing Animation
1) Add typed.js to shared header elements
2) Add strings to page
3) Update sub-header
4) Add script tag to call typed.js







Unit 9 Lesson 1

Run: rails g scaffold Lesson title:string content:text video_html:text unit:references
Update Migration to include slug
Update model to include Friendly ID

Lesson 2

Move to Admin
  - Copy controller
  - Update routes
Use Trixy Rich Text Editor
Include video attachment



Steps for setting up SignUp/In with Google
=======
1) Add gem
2) Sign up for Google Oauth at https://console.developers.google.com
    - Create Project
    - Enable Google+ API
    - Configure OAuth Consent Screen
    - Create OAuth Credentials
3) Configure Devise

AWS S3 Storage Lesson Steps:

1) Install gem "aws-sdk-s3", require: false
2) create bucket on AWS
3) create user on AWS
4) Update storage.yml configuration
5) Set environment variables in Heroku


<<<<<<< HEAD
Steps for Home Page Improvements
1) New Devise Partial
2) Devise helper functions
3) Update home page
=======
Trix Photo Attachment Storage Steps
1) Generate Photo scaffold
2) require admin authentication
3) Copy trix attachment example javascript
4) Update javascript
5) Add to assets.rb
6) Restart server
7) Enjoy!

xhr.setRequestHeader("X-CSRF-Token", Rails.csrfToken())

var photoResponse = JSON.parse(xhr.responseText);
photoResponse.image_url
photoResponse.url
>>>>>>> Unit4Lessons
